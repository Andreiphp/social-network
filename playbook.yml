---
- name: Config webservers nginx
  hosts: clients
  become: true
  become_method: sudo

  tasks:
    - name: install packages
      apt: 
        name: "{{item}}"
        state: present
        update_cache: yes
      loop: 
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release

    - name: add key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add repository docker
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: install docker
      apt: 
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - python3-pip

    - name: start docker
      service: 
        name: docker
        state: started
        enabled: yes

    - name: pull Docker image
      docker_image:
        name: "andreividnik59/devops:{{BUILD_NUMBER}}"
        source: pull

    - name: Create default containers
      docker_container:
        name: "web_{{BUILD_NUMBER}}"
        image: "andreividnik59/devops:{{BUILD_NUMBER}}"
        ports:
          - "81:80"
        state: present
      with_sequence: count=1
  handlers: 
    - name: restart docker
      service:
        name: docker
        state: restarted    


    # - name: install nginx
    #   apt: name=nginx update_cache=yes

    # - name: copy nginx config file
    #   copy: src=files/nginx.conf dest=/etc/nginx/sites-available/default
    
    # - name: enable configuration 
    #   file: dest=/etc/nginx/sites-enabled/default src=/etc/nginx/sites-available/default state=link
  
    # - name: copy index.html
    #   template: src=templates/index.html.j2 dest=/var/www/html/index.html mode=0644
  
    # - name: restart nginx
    #   service: name=nginx state=restarted